name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Ajouter des permissions pour écrire dans GHCR
permissions:
  contents: read
  packages: write

jobs:
  # Job pour exécuter tous les tests avec Docker Compose
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Cloner le dépôt
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # 2. Installer Docker et Docker Compose
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Exécuter les tests avec docker-compose.test.yml
      - name: 🧪 Run tests
        run: |
          docker-compose -f docker-compose.test.yml up --build --abort-on-container-exit

      # 4. Sauvegarder les logs en cas d'échec
      - name: 📜 Save logs on failure
        if: failure()
        run: |
          docker-compose -f docker-compose.test.yml logs > test-logs.txt
          cat test-logs.txt

      # 5. Nettoyer après les tests
      - name: 🧹 Clean up
        if: always()
        run: |
          docker-compose -f docker-compose.test.yml down -v --rmi local

  # Job pour construire et pousser les images Docker
  docker-build-push:
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      # 1. Cloner le dépôt
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      # 2. Installer Docker Buildx
      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Se connecter à GitHub Container Registry (GHCR)
      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      # 4. Générer les tags Docker
      - name: 🏷️ Generate Docker tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/smart-campus-frontend
            ghcr.io/${{ github.repository }}/smart-campus-navigation-bot
            ghcr.io/${{ github.repository }}/smart-campus-lost-and-found
          tags: |
            type=ref,event=branch
            type=sha,prefix=
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=match,pattern=v(\d+\.\d+\.\d+),group=1 # Pour les tags Git comme v1.0.0

      # 5. Construire et pousser l'image frontend
      - name: 🏗️ Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/smart-campus-frontend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/smart-campus-frontend:latest
          labels: ${{ steps.meta.outputs.labels }}

      # 6. Construire et pousser l'image navigation-bot
      - name: 🏗️ Build and push navigation-bot image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/navigation-bot
          file: ./backend/navigation-bot/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/smart-campus-navigation-bot:${{ github.sha }}
            ghcr.io/${{ github.repository }}/smart-campus-navigation-bot:latest
          labels: ${{ steps.meta.outputs.labels }}

      # 7. Construire et pousser l'image lost-and-found
      - name: 🏗️ Build and push lost-and-found image
        uses: docker/build-push-action@v5
        with:
          context: ./backend/lost-and-found
          file: ./backend/lost-and-found/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/smart-campus-lost-and-found:${{ github.sha }}
            ghcr.io/${{ github.repository }}/smart-campus-lost-and-found:latest
          labels: ${{ steps.meta.outputs.labels }}
