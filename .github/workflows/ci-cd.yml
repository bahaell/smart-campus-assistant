name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  packages: write

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

    steps:
      - name: üìÖ Checkout code
        uses: actions/checkout@v4

      - name: üßπ Free up disk space (GitHub Actions)
        run: |
          echo "üßπ Cleaning up disk space..."
          docker system prune -af
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          df -h

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: üè∑Ô∏è Generate Docker tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}/smart-campus-frontend
            ghcr.io/${{ github.repository }}/smart-campus-navigation-bot
            ghcr.io/${{ github.repository }}/smart-campus-lost-and-found
          tags: |
            type=ref,event=branch
            type=sha,prefix=
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}
            type=match,pattern=v(\d+\.\d+\.\d+),group=1

      - name: üèóÔ∏è Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./Frontend
          file: ./Frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/smart-campus-frontend:${{ github.sha }}
            ghcr.io/${{ github.repository }}/smart-campus-frontend:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: üèóÔ∏è Build and push navigation-bot image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend/navigation-bot
          file: ./Backend/navigation-bot/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/smart-campus-navigation-bot:${{ github.sha }}
            ghcr.io/${{ github.repository }}/smart-campus-navigation-bot:latest
          labels: ${{ steps.meta.outputs.labels }}

      - name: üèóÔ∏è Build and push lost-and-found image
        uses: docker/build-push-action@v5
        with:
          context: ./Backend/lost-and-found
          file: ./Backend/lost-and-found/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/smart-campus-lost-and-found:${{ github.sha }}
            ghcr.io/${{ github.repository }}/smart-campus-lost-and-found:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy-to-aci:
    needs: [docker-build-push]
    runs-on: ubuntu-latest
    steps:
      - name: üìÖ Checkout code
        uses: actions/checkout@v4

      - name: üîê Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: üöÄ Deploy MongoDB to ACI
        uses: azure/aci-deploy@v1
        with:
          resource-group: smart-campus-rg
          dns-name-label: mongodb-static
          name: smart-campus-mongodb
          image: mongo:latest
          ports: 27017
          cpu: 1
          memory: 1.5
          location: francecentral

      - name: ‚è≥ Wait for MongoDB to be ready
        run: |
          for i in {1..30}; do
            if nc -z mongodb-static.francecentral.azurecontainer.io 27017; then
              echo "MongoDB is ready!"
              break
            fi
            echo "Waiting for MongoDB..."
            sleep 5
          done
        shell: bash

      - name: üöÄ Deploy navigation-bot to ACI
        uses: azure/aci-deploy@v1
        with:
          resource-group: smart-campus-rg
          dns-name-label: navigationbot-static
          name: smart-campus-navigation-bot
          image: ghcr.io/${{ github.repository }}/smart-campus-navigation-bot:latest
          registry-login-server: ghcr.io
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GHCR_TOKEN }}
          ports: 8001
          cpu: 1
          memory: 1.5
          location: francecentral
          environment-variables: MONGO_URI=mongodb://mongodb-static.francecentral.azurecontainer.io:27017

      - name: üöÄ Deploy lost-and-found to ACI
        uses: azure/aci-deploy@v1
        with:
          resource-group: smart-campus-rg
          dns-name-label: lostfound-static
          name: smart-campus-lost-and-found
          image: ghcr.io/${{ github.repository }}/smart-campus-lost-and-found:latest
          registry-login-server: ghcr.io
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GHCR_TOKEN }}
          ports: 8002
          cpu: 1
          memory: 1.5
          location: francecentral
          environment-variables: MONGO_URI=mongodb://mongodb-static.francecentral.azurecontainer.io:27017

      - name: üöÄ Deploy frontend to ACI
        uses: azure/aci-deploy@v1
        with:
          resource-group: smart-campus-rg
          dns-name-label: frontend-static
          name: smart-campus-frontend
          image: ghcr.io/${{ github.repository }}/smart-campus-frontend:latest
          registry-login-server: ghcr.io
          registry-username: ${{ github.actor }}
          registry-password: ${{ secrets.GHCR_TOKEN }}
          ports: 80
          cpu: 1
          memory: 1.5
          location: francecentral
          environment-variables: |
            NAVIGATION_BOT_API_URL=http://navigationbot-static.francecentral.azurecontainer.io:8001
            LOST_AND_FOUND_API_URL=http://lostfound-static.francecentral.azurecontainer.io:8002